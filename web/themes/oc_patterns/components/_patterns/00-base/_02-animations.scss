/* ================= 
  ANIMATIONS
===================== */


///mixin - animation
@mixin animation($animate...) {
	$max: length($animate);
	$animations: '';

	@for $i from 1 through $max {
		$animations: #{$animations + nth($animate, $i)};

		@if $i < $max {
			$animations: #{$animations + ", "};
		}
	}
	-webkit-animation: $animations;
	-moz-animation:    $animations;
	-o-animation:      $animations;
	animation:         $animations;
}

///mixin - keyframes
@mixin keyframes($animationName) {
	@-webkit-keyframes #{$animationName} {
		@content;
	}
	@-moz-keyframes #{$animationName} {
		@content;
	}
	@-o-keyframes #{$animationName} {
		@content;
	}
	@keyframes #{$animationName} {
		@content;
	}
}


/*  Keyframes setup (these are the animation types used in the animation mixin)
------------ */

//slide in from 150% below (150% of the element height)
@include keyframes(slideInUp){
	0%{
		@include translate3d(0, 150%, 0);
		visibility: visible;
	}
	100%{
		@include translate3d(0, 0, 0);
		transform: translate3d(0, 0, 0);
	}
}

//slide down (height slide from 0)
@include keyframes(slideDown){
	0%{

		height: 0;
		opacity: 0;
	}
	100%{

		height: auto;
		opacity: 1;
	}
}

//slide in from 150% right (150% of the element height)
@include keyframes(slideInRight){
	from{
		@include translate3d(150%, 0, 0);
		visibility: visible;
	}
	to{
		@include translate3d(0, 0, 0);
		transform: translate3d(0, 0, 0);
	}
}

//scale 1.25 times then back to normal
@include keyframes(breathe){
	0%{
		@include scale(1, 1);
	}
	50%{
		@include scale(1.25, 1.25);
	}
	100%{
		@include scale(1, 1);
	}
}

//zoom in
@include keyframes(zoomIn){
	from{
		opacity: 0;
		@include scale3d(.3, .3, .3);
	}
	50%{
		opacity: 1;
	}
	100%{
		opacity: 1;
		@include scale3d(1, 1, 1);
	}
}

//delayed fade in
@include keyframes(fadeIn){
	from{
		opacity: 0;
	}
	50%{
		opacity: .5;
	}
	100%{
		opacity: 1;
	}
}

//expandDown
@include keyframes(expandDown){
	from{
		height: 0
	}
	20%{
		@include translateY(100%);
		opacity: 0;
	}
	30%{
		height: auto;
	}
	to {
		@include translateY(0);
		opacity: 1;
	}
}


/* Simple Animations
----------------- */

///mixin - transAll
@mixin transAll($time){
	transition: all $time ease;
	-moz-transition: all $time ease;
	-webkit-transition: all $time ease;
	-webkit-transform: translateZ(0);
}

///mixin - transAll(.3s)
@mixin transClear{
	transition: none;
	-moz-transition: none;
	-webkit-transition: none;
}


/*  Class based animations
--------------- */
// @include animation('flipY 1.5s      .5s    1          ease-in          forwards');
//                     name  duration  delay  iteration  timing function  stop keyframe hold
// forwards keeps the styling of the last keyframe
// backwards will apply the styling of the first keyframe when animation is done.
// both will do both (if different styling is used in each)
// can also set animation direction = reverse, alternate, alternate-reverse (default is normal). Alternate switches direction every iteration

.slideInUp {
	@include animation('slideInUp 1.5s 1 ease-out');
}
.expandDown {
	@include animation('expandDown 1.5s 1 ease-out');
}
.slideInRight {
	@include animation('slideInRight 1.5s 1');
}
.zoomIn{
	@include animation('zoomIn 1.5s 1');
}
.fi-delay{
	@include animation('fadeIn 3s 1');
}

