{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}


{# define default paragraphs classes #}
{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
'paragraphs-item-' ~ paragraph.id.value,
'section-holder'
]
%}

<div class="section{% if (content.field_background_style|render) %} background {{ content.field_background_style.0['#markup'] }}{% endif %} {{ content.field_layout.0['#markup'] }}"{% if (content.field_background_style.0['#markup'] == 'image') and (content.field_background_image.0|render) %} style="background:url({{ file_url(content.field_background_image.0['#media'].field_media_image.entity.fileuri) }}) no-repeat;background-size: cover;"{% endif %}> 
	
	{% set anchor = content.field_anchor_link.0['#context'].value|clean_id %}
	{% if anchor %}<a name="{{ anchor }}" id="{{ anchor }}"></a>{% endif %}

		
	{# set the default paragraph classes #}
	<div{{ attributes.addClass(classes)  }}>
		
		{# print the content without the styling fields #}
 		{% block widgetContent %}
 			{%- if content.field_section_title.0 -%}
 			<div class="field-section-title">
 				<h3 class="section-title">
 					{{- content.field_section_title.0['#context'].value -}}
 				</h3>
 			</div>
 			{%- endif -%}
 			{{ content.field_section_intro }}
			{{ content.field_section_widgets }}
 		{% endblock %}
	
	</div>

</div>
