/* ===============
   FORMS
================= */

@mixin placeholder{
	$placeTint: .4;
	&::-webkit-placeholder{
		opacity: $placeTint;
		color: $placeColor;
	}
	&::-moz-placeholder{
		opacity: $placeTint;
		color: $placeColor;
	}
	&:-ms-input-placeholder{
		opacity: $placeTint;
		color: $placeColor;
	}
	&::-webkit-input-placeholder{
		opacity: $placeTint;
		color: $placeColor;
	}
}

@mixin placeholderFocus{
	$placeFocusTint: .2;
	&::-webkit-placeholder{
		opacity: $placeFocusTint;
		color: $placeFocusColor;
	}
	&::-moz-placeholder{
		opacity: $placeFocusTint;
		color: $placeFocusColor;
	}
	&:-ms-input-placeholder{
		opacity: $placeFocusTint;
		color: $placeFocusColor;
	}
	&::-webkit-input-placeholder{
		opacity: $placeFocusTint;
		color: $placeFocusColor;
	}
}

@mixin textInput{
	border: 1px solid $formElementBorder;
	font-size: 1.6rem;
	font-family: $bodyFont;
	padding: 10px 6px 11px;
	width: 100%;
	line-height: 1;
	@include placeholder;
	&:focus{
		@include placeholderFocus;
	}
}

@mixin required{
	&:after{
		content: '*';
		color: $validation;
		position: relative;
		top: -1px;
		right: -.5rem;
		@include xSmaller;
	}
}

@mixin customOptions{
	input{
		//hide the normal inputs
		position: absolute;
		opacity: 0;
		&:checked{
			+ label:before{
				background: $checkBoxCheckedBack;
				border-color: $checkBoxChecked;
			}
			&:hover{
				& + label:before{
					background: $checkBoxCheckedBackHover;
				}
			}
		}
		&:focus,&:hover{
			+ label:before{
				background: $checkBoxBackHover;
			}
		}
	}
	label{
		display: inline-block;
		width: 100%;
		padding-left: 26px;
		position: relative;
		margin-bottom: $spaceXs;
		//create custom boxes before the label
		&:before{
			content: '';
			display: inline-block;
			width: 16px;
			height: 16px;
			border: 2px solid $checkBox;
			cursor: pointer;
			position: absolute;
			top: 3px;
			left: 0;
			z-index: 20;
			margin-right: 1rem;
		}
	}
}//end custom options


/* FORM ITEM STYLING
-------------------- */
//wipe browser appearance from inputs
input[type=text], input[type=search], input[type=url], input[type=number], textarea, input[type="search"] {
	@include browserWipe;
}

input[type="submit"].button{
	@include submitButton;
}

//validation
.has-error {
	border-color: $validation;
}


// generic form-item
.form-item{
	width: 100%;
	margin-bottom: $spaceMd;
	label{
		font-weight: $heavy;
		display: block;
		margin-bottom: $spaceXs;
		padding-bottom: 0;
	}
}//end form item


// required items
.form-required,.js-form-required{
	position: relative;
	@include required;
}


//descriptions
.description{
	@include smaller;
}
input + .description{
	padding-top: $spaceXs;
}


//fieldsets
fieldset{
	border: none;
	padding: 0;
	margin: 0;
	legend{
		font-weight: $heavy;
		@include larger;
		margin-bottom: $spaceXs;
	}
	&:not(.js-webform-type-radios){
		.fieldset-wrapper{
			margin: 0 2rem;
		}
	}
}//end fieldset



/* USER LOGIN
--------------- */
.user-login-form,#user-pass{
	.form-item input:not([type="submit"]){
		max-width: 400px;
	}
	.description,p{
		font-size: 1.4rem;
	}
	#edit-submit.button{
		margin: 0;
	}
}//end user login form
