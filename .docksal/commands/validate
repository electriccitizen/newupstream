#!/usr/bin/env bash

## Validate a Docksal powered local against Pantheon master.
##
## Usage: fin sync

# Abort if anything fails
set -e

#-------------------------- Settings --------------------------------

# PROJECT_ROOT is passed from fin.
# The following variables are configured in the '.env' file: DOCROOT, VIRTUAL_HOST.

SITE_DIRECTORY="default"
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"

#-------------------------- END: Settings --------------------------------

#-------------------------- Include functions --------------------------------

source "${PROJECT_ROOT}/.docksal/commands/common/import_database.sh"
source "${PROJECT_ROOT}/.docksal/commands/common/enable_modules.sh"

#-------------------------- END: Include functions --------------------------------

#-------------------------- Helper functions --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

is_windows ()
{
	local res=$(uname | grep 'CYGWIN_NT')
	if [[ "$res" != "" ]]; then
		return 0
	else
		return 1
	fi
}

#-------------------------- END: Helper functions --------------------------------

#-------------------------- Execution --------------------------------

if [[ "$PROJECT_ROOT" == "" ]]; then
	echo-red "\$PROJECT_ROOT is not set"
	exit 1
fi

#if [[ $DOCKER_RUNNING == "true" ]]; then
#	echo -e "${green_bg} Step 1 ${NC}${green} Recreating services...${NC}"
#	fin reset -f
#else
#	echo -e "${green_bg} Step 1 ${NC}${green} Creating services...${NC}"
#	fin up
#fi

# Pull from master
echo -e "${green_bg} Step 1 ${NC}${green} Running git pull from master${NC}"
cd $PROJECT_ROOT
git pull origin $GIT_BRANCH

# Run composer install
echo -e "${green_bg} Step 2 ${NC}${green} Running composer install...${NC}"
composer install

# Run db updates
echo -e "${green_bg} Step 3 ${NC}${green} Running database updates...${NC}"
fin drush updb -y

# Run entity updates
echo -e "${green_bg} Step 4 ${NC}${green} Running entity updates...${NC}"
fin drush entup -y

# Configure things for local development environment.
echo -e "${green_bg} Step 5 ${NC}${green} Importing config...${NC}"
fin drush cim -y

# Clear cache
echo -e "${green_bg} Step 6 ${NC}${green} Clearing caches...${NC}"
fin drush cr all


echo -en "${green_bg} DONE! ${NC} "
echo -e "Open ${yellow}http://${VIRTUAL_HOST}${NC} in your browser to verify the setup."

#-------------------------- END: Execution --------------------------------