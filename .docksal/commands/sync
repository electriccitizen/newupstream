#!/usr/bin/env bash

## Sync a Docksal powered local Pantheon site.
##
## Usage: fin foo

# Abort if anything fails
set -e

#-------------------------- Settings --------------------------------

# PROJECT_ROOT is passed from fin.
# The following variables are configured in the '.env' file: DOCROOT, VIRTUAL_HOST.

SITE_DIRECTORY="default"
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"

#-------------------------- END: Settings --------------------------------

#-------------------------- Include functions --------------------------------

source "${PROJECT_ROOT}/.docksal/commands/common/import_database.sh"
source "${PROJECT_ROOT}/.docksal/commands/common/enable_modules.sh"
source "${PROJECT_ROOT}/.docksal/commands/common/sync_db.sh"
source "${PROJECT_ROOT}/.docksal/commands/common/sync_config.sh"

#-------------------------- END: Include functions --------------------------------

#-------------------------- Helper functions --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

bg='\[\033[0;35m\]'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

is_windows ()
{
	local res=$(uname | grep 'CYGWIN_NT')
	if [[ "$res" != "" ]]; then
		return 0
	else
		return 1
	fi
}

myfunc()
{
  echo "You choose $1"
  # cannot change $1 - we'd have to say:
  # 1="Goodbye Cruel"
  # which is not a valid syntax. However, we can
  # change $a:
  a="Goodbye Cruel"
  exit
}

function _sync_db {
time sync_db $REPLY;
all_done=1
}


function _sync_config {
time sync_config $REPLY;
all_done=1
}

#-------------------------- END: Helper functions --------------------------------

#-------------------------- Execution --------------------------------


# Make sure we are ready to rock
if [[ "$PROJECT_ROOT" == "" ]]; then
	echo-red "\$PROJECT_ROOT is not set"
	exit 1
fi

: <<'END'
if [[ $DOCKER_RUNNING == "true" ]]; then
	echo -e "${green_bg} Step 1 ${NC}${green} Recreating services...${NC}"
	fin reset -f
else
	echo -e "${green_bg} Step 1 ${NC}${green} Creating services...${NC}"
	fin up
fi
END

# Invoke the spirit of joshua
clear
#say shall we play a game?

# Start database sync
echo -e "${green_bg} Step 2 ${NC}${green} Import database from:${NC}"

all_done=0
while (( !all_done )); do
    options=($PANTHEON_SITE_ENV 'test' 'live' 'none' 'exit')
    select opt in "${options[@]}"; do
        case $REPLY in
            1) _sync_db; exit ;;
            2) _sync_db; break ;;
            3) _sync_db; break ;;
            4) _sync_config; break ;;
            5) exit ;;
            *) echo "Invalid option" ;;
     esac
    done
done

exit

echo "Exiting"
sleep 2
#-------------------------- END: Execution --------------------------------

